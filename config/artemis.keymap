/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define base 0
#define nav  1
#define num  2
#define misc 3
#define func 4

&sk {
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&lt {
    tapping-term-ms = <250>;
    quick-tap-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Artemis Base Layer";
            bindings = <
                &kp Q      &kp W      &kp F      &kp P        &kp G              &kp J        &kp L       &kp U      &kp Y      &kp SQT
                &hm LGUI A &hm LALT R &hm LCTL S &hm LSHFT T  &kp D              &kp H        &hm LSHFT N &hm LCTL E &hm LALT I &hm LGUI O
                &kp Z      &kp X      &kp C      &kp V        &kp B              &kp K        &kp M       &kp COMMA   &kp DOT    &kp FSLH
                                                 &lt misc ESC &lt nav SPACE      &lt num BSPC &sk LSHFT
            >;
        };

        nav_layer {
            label = "Navigation and Shortcuts";
            bindings = <
               &kp LA(UP)     &kp LA(DOWN)     &kp LG(LS(LBKT)) &kp LG(LS(RBKT)) &kp LSLCK      &kp INS    &kp HOME         &kp UP     &kp END      &kp PG_UP
               &sk LGUI       &sk LALT         &sk LCTL         &caps_word       &kp CAPS       &kp DEL    &kp LEFT         &kp DOWN   &kp RIGHT    &kp PG_DN
               &kp LA(LS(UP)) &kp LA(LS(DOWN)) &kp LS(PG_UP)    &kp LS(PG_DN)    &kp LNLCK      &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP
                                                                &trans           &trans         &kp RET    &trans
            >;
        };

        num_layer {
            label = "Numbers and Symbols";
            bindings = <
               &kp EXCL    &kp AT      &kp HASH    &kp DLLR     &kp PRCNT      &kp CARET &kp AMPS     &kp ASTRK   &kp LPAR    &kp RPAR
               &hm LGUI N1 &hm LALT N2 &hm LCTL N3 &hm LSHFT N4 &kp N5         &kp N6    &hm LSHFT N7 &hm LCTL N8 &hm LALT N9 &hm LGUI N0
               &kp LBKT    &kp RBKT    &kp EQUAL   &kp MINUS    &kp GRAVE      &kp BSLH  &kp SEMI     &trans      &trans      &trans
                                                   &trans       &kp TAB        &trans    &trans
            >;
        };

        misc_layer {
            label = "Miscellaneous";
            bindings = <
                &bootloader &trans &trans &trans &trans        &out OUT_TOG      &out OUT_USB     &out OUT_BLE      &trans       &trans
                &trans      &trans &trans &trans &trans        &bt BT_CLR        &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4
                &trans      &trans &trans &trans &trans        &ext_power EP_TOG &ext_power EP_ON &ext_power EP_OFF &trans       &trans
                                          &trans &trans        &trans            &trans
            >;
        };

       func_layer {
            label = "Function Keys";

            bindings = <
               &trans      &trans      &trans      &trans       &trans      &trans &trans       &trans      &trans      &bootloader
               &hm LGUI F1 &hm LALT F2 &hm LCTL F3 &hm LSHFT F4 &kp F5      &kp F6 &hm LSHFT F7 &hm LCTL F8 &hm LALT F9 &hm LGUI F10
               &trans      &trans      &trans      &kp F11      &trans      &trans &kp F12      &trans      &trans      &trans
                                                   &trans       &trans      &trans &trans
            >;
        };
    };
};
